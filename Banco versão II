import textwrap

def menu():
    menu = '''\n
    ========MENU=======
    [d]\tDepositar
    [s]\tSacar
    [e]\tExtrato
    [nu]\tNovo Usuário
    [nc]\tNova Conta
    [lc]\tListar Contas
    [sair]\tSair
    =>'''
    return input(textwrap.dedent(menu))

def depositar(saldo, valor, extrato, /):
    if valor > 0:
        saldo += valor
        extrato += f'Depósito: R$ {valor:.2f}\n'
        print('\nDepósito realizado com sucesso!')
    else:
        print('ERRO! Valor informado é inválido.')
    return saldo, extrato

def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    excedeu_saldo = valor > saldo
    excedeu_limite = valor > limite
    excedeu_saques = numero_saques >= limite_saques

    if excedeu_saldo:
        print('\nERRO! Você não possui saldo suficiente.')
    elif excedeu_limite:
        print('\nERRO! Valor do saque excedeu o limite da operação.')
    elif excedeu_saques:
        print('\nERRO! Número máximo de saques excedido.')
    elif valor > 0:
        saldo -= valor
        extrato += f'Saque: R$ {valor:.2f}\n'
        numero_saques += 1
        print('\nSaque realizado com sucesso!')
    else:
        print('\nERRO! Valor informado é inválido.')
    return saldo, extrato, numero_saques

def exibir_extrato(saldo, /, *, extrato):
    print('\n======== EXTRATO ========')
    print('Não foram realizadas movimentações.' if not extrato else extrato)
    print(f'\nSaldo: R$ {saldo:.2f}')
    print('=========================')

def criar_usuario(usuarios):
    cpf = input('Informe o CPF (somente números): ')
    usuario = filtrar_usuario(cpf, usuarios)
    if usuario:
        print('\nCPF já cadastrado.')
        return
    nome = input('Informe o nome completo: ')
    data_nascimento = input('Informe a data de nascimento (dd-mm-aaaa): ')
    endereco = input('Informe o endereço (Rua, N° - Bairro - Cidade/UF): ')
    usuarios.append({'nome': nome, 'data_nascimento': data_nascimento, 'cpf': cpf, 'endereco': endereco})
    print('========Usuário criado com sucesso!========')

def filtrar_usuario(cpf, usuarios):
    usuario_filtrado = [usuario for usuario in usuarios if usuario['cpf'] == cpf]
    return usuario_filtrado[0] if usuario_filtrado else None

def criar_conta(agencia, numero_conta, usuarios):
    cpf = input('Informe o CPF do usuário: ')
    usuario = filtrar_usuario(cpf, usuarios)
    if usuario:
        print('\n========Conta criada com sucesso!========')
        return {'agencia': agencia, 'numero_conta': numero_conta, 'usuario': usuario}
    print('\nUsuário não encontrado!')

def listar_contas(contas):
    for conta in contas:
        linha = f'''\
        Agência: {conta['agencia']}
        C/C: {conta['numero_conta']}
        Titular: {conta['usuario']['nome']}
        '''
        print('=' * 100)
        print(textwrap.dedent(linha))

def main():
    LIMITE_SAQUES = 3
    AGENCIA = '0001'

    saldo = 0
    limite = 500
    extrato = ''
    numero_saques = 0
    usuarios = []
    contas = []

    while True:
        opcao = menu()

        if opcao in ['d', 'D']:
            valor = float(input('Informe o valor do depósito: '))
            saldo, extrato = depositar(saldo, valor, extrato)

        elif opcao in ['s', 'S']:
            valor = float(input('Informe o valor do saque: '))
            saldo, extrato, numero_saques = sacar(
                saldo=saldo,
                valor=valor,
                extrato=extrato,
                limite=limite,
                numero_saques=numero_saques,
                limite_saques=LIMITE_SAQUES,
            )

        elif opcao in ['e', 'E']:
            exibir_extrato(saldo, extrato=extrato)

        elif opcao in ['nu', 'Nu', 'nU', 'NU']:
            criar_usuario(usuarios)

        elif opcao in ['nc', 'NC', 'Nc', 'nC']:
            numero_conta = len(contas) + 1
            conta = criar_conta(AGENCIA, numero_conta, usuarios)
            if conta:
                contas.append(conta)

        elif opcao in ['lc', 'LC', 'Lc', 'lC']:
            listar_contas(contas)

        elif opcao in ['sair', 'SAIR', 'Sair']:
            break

main()
